{
  "id": "sysml_d888e11a_7561a9fa_1757342906",
  "task": "Model a commercial drone with 4 rotors, GPS positioning, camera gimbal, and remote control communication. Keep it concise, short and Simple.",
  "generated_code": "package DroneModel {\n\n    // --- Attribute Definitions ---\n    attribute def Distance :> LengthValue { unit = m; }\n    attribute def Speed :> SpeedValue { unit = m/s; }\n\n    // --- Part Definitions ---\n    part def Drone {\n        part rotors[4] : Rotor;\n        part frame : DroneFrame;\n        part battery : Battery;\n        part gps : GPSModule;\n        part camera : CameraGimbal;\n        part remote : RemoteController;\n        part powerSupply : PowerSupply;\n\n        // Ports\n        port rotorPwrPort : RotorPowerPort;\n        port gsmPort : GSMCommunicationPort;\n        port cameraPort : CameraPort;\n        port rcPort : RCCommunicationPort;\n\n        // Actions\n        perform action takePhoto;\n        perform action recordVideo;\n    }\n\n    part def DroneFrame {\n        attribute material : String = \"carbon fiber\";\n        attribute mass : MassValue = 1.2 [kg];\n    }\n\n    part def Rotor {\n        attribute diameter : Distance = 30 [cm];\n        attribute pitch : Real = 5.0;\n        attribute rpm : Real = 4000.0;\n    }\n\n    part def Battery {\n        attribute capacity : Real = 2000.0 [mAh];\n        attribute voltage : Real = 11.1 [V];\n    }\n\n    part def GPSModule {\n        attribute accuracy : Distance = 5.0 [m];\n        attribute firmwareVersion : String = \"v2.3\";\n    }\n\n    part def CameraGimbal {\n        attribute resolution : String = \"4K\";\n        attribute focusRange : Distance = 1000.0 [m];\n    }\n\n    part def RemoteController {\n        attribute batteryLevel : Real = 95.0 [%];\n        attribute signalRange : Distance = 1.5 [km];\n    }\n\n    part def PowerSupply {\n        attribute voltage : Real = 11.1 [V];\n        attribute current : Real = 20.0 [A];\n    }\n\n    // --- Port Definitions ---\n    port def RotorPowerPort {\n        out rpm : Real;\n        in voltage : Real;\n    }\n\n    port def GSMCommunicationPort {\n        in signalStrength : Real;\n        out dataRate : Real;\n    }\n\n    port def CameraPort {\n        in trigger : Boolean;\n        out imageStream : String;\n    }\n\n    port def RCCommunicationPort {\n        in controlSignal : String;\n        out batteryLevel : Real;\n    }\n\n    // --- Connection Definitions ---\n    connection powerConn connect rotorPwrPort to powerSupply;\n\n    // --- Part Usages ---\n    part commercialDrone : Drone {\n        // Redefining attributes\n        :>> attribute mass = 2.5 [kg];\n\n        // Connection instances\n        connection gsmConn connect gps.gsmPort to remote.gsmPort;\n        connection camConn connect camera.cameraPort to remote.cameraPort;\n\n        // Action usage\n        perform commercialDrone.takePhoto;\n        perform commercialDrone.recordVideo;\n    }\n\n    // --- Requirement and Constraint Example ---\n    requirement batteryLifeReq {\n        subject drone : Drone;\n        requirement constraint { drone.battery.capacity > 1500.0 [mAh]; }\n    }\n\n}",
  "human_feedback": "",
  "validation_info": {
    "success": true,
    "validation_count": 1,
    "success_rate": 1.0,
    "final_errors": []
  },
  "workflow_metadata": {
    "iterations_used": 1,
    "max_iterations": 10,
    "human_review_enabled": true,
    "human_response": "approve",
    "workflow_status": "human_approved"
  },
  "created_at": "2025-09-08T16:48:26.546050",
  "embedding_text": "Task: Model a commercial drone with 4 rotors, GPS positioning, camera gimbal, and remote control communication. Keep it concise, short and Simple. | Comments: // --- Attribute Definitions --- // --- Part Definitions --- // Ports // Actions // --- Port Definitions --- // --- Connection Definitions --- // --- Part Usages --- // Redefining attributes // Connection instances // Action usage // --- Requirement and Constraint Example --- | Parts: part def Drone { part def DroneFrame { part def Rotor { part def Battery { part def GPSModule { part def CameraGimbal { part def RemoteController { part def PowerSupply { part commercialDrone : Drone {"
}
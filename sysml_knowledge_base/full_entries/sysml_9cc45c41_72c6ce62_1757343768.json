{
  "id": "sysml_9cc45c41_72c6ce62_1757343768",
  "task": "Model an aircraft flight control system with autopilot, navigation sensors, and control surfaces. Make it concise and simple.",
  "generated_code": "package AircraftControlSystem {\n\n    // --- Importing necessary libraries ---\n    private import ScalarValues::*;\n    private import ISQ::MassValue;\n    private import SI::m;\n    private import SI::kg;\n    private import SI::N;\n    private import ControlFunctions::*;\n\n    // --- Attribute Definitions ---\n    attribute def MaxSpeed { value: Real; unit: m/s; }\n    attribute def CruiseSpeed { value: Real; unit: m/s; }\n\n    // --- Part Definitions ---\n    part def Aircraft {\n        attribute totalMass : MassValue;\n        attribute maxSpeed : MaxSpeed;\n        attribute cruiseSpeed : CruiseSpeed;\n        \n        port fuelPort {\n            out item fuelFlow : Fuel;\n        }\n        port controlPort {\n            in item setPoint : Real;\n            in item feedback : Real;\n        }\n    }\n\n    part def Autopilot {\n        attribute gain : Real;\n        port inputPort {\n            in item setPoint : Real;\n            in item feedback : Real;\n        }\n        port outputPort {\n            out item controlSignal : Real;\n        }\n    }\n\n    part def NavigationSensors {\n        port sensorPort {\n            out item position : Real;\n            out item velocity : Real;\n        }\n    }\n\n    part def ControlSurfaces {\n        port controlPort {\n            in item controlSignal : Real;\n        }\n    }\n\n    // --- Connection Definitions ---\n    connection def FuelSupply {\n        end fuelTank.output : Fuel;\n        end aircraft.fuelPort.input : Fuel;\n    }\n\n    connection def ControlSignal {\n        end autopilot.outputPort.controlSignal;\n        end controlSurfaces.controlPort.controlSignal;\n    }\n\n    // --- Part Usages ---\n    part fuelTank {\n        attribute totalMass = 100.0 [kg];\n        port output : Fuel;\n    }\n\n    part aircraft : Aircraft {\n        attribute totalMass = 2000.0 [kg];\n        attribute maxSpeed { value = 900.0; unit = m/s; }\n        attribute cruiseSpeed { value = 750.0; unit = m/s; }\n        \n        port fuelPort;\n        port controlPort;\n        \n        // --- Sub-parts ---\n        part autopilot : Autopilot {\n            attribute gain = 1.5;\n            port inputPort;\n            port outputPort;\n        }\n\n        part navigationSensors : NavigationSensors {\n            port sensorPort;\n        }\n\n        part controlSurfaces : ControlSurfaces {\n            port controlPort;\n        }\n    }\n\n    // --- Connection Usages ---\n    connection fuelLine : FuelSupply connect fuelTank.output to aircraft.fuelPort.input;\n\n    connection controlSignal : ControlSignal connect autopilot.outputPort.controlSignal to controlSurfaces.controlPort.controlSignal;\n\n    // --- Requirement Definitions ---\n    requirement MassLimit {\n        doc /* The total mass of the aircraft shall not exceed 2500 kg. */\n        attribute mass : MassValue;\n        assert constraint { mass <= 2500.0 [kg] }\n    }\n\n    requirement SpeedLimit {\n        doc /* The aircraft shall maintain a speed less than the maximum speed limit. */\n        attribute actualSpeed : Real;\n        attribute maxSpeed : MaxSpeed;\n        assert constraint { actualSpeed < maxSpeed.value }\n    }\n\n    // --- Requirement Usages ---\n    satisfy MassLimit by aircraft {\n        :>> mass = aircraft.totalMass;\n    }\n\n    satisfy SpeedLimit by aircraft {\n        :>> actualSpeed = navigationSensors.sensorPort.velocity;\n        :>> maxSpeed = aircraft.maxSpeed;\n    }\n\n}",
  "human_feedback": "",
  "validation_info": {
    "success": true,
    "validation_count": 1,
    "success_rate": 1.0,
    "final_errors": []
  },
  "workflow_metadata": {
    "iterations_used": 1,
    "max_iterations": 10,
    "human_review_enabled": true,
    "human_response": "approve",
    "workflow_status": "human_approved"
  },
  "created_at": "2025-09-08T17:02:48.835508",
  "embedding_text": "Task: Model an aircraft flight control system with autopilot, navigation sensors, and control surfaces. Make it concise and simple. | Comments: // --- Importing necessary libraries --- // --- Attribute Definitions --- // --- Part Definitions --- // --- Connection Definitions --- // --- Part Usages --- // --- Sub-parts --- // --- Connection Usages --- // --- Requirement Definitions --- // --- Requirement Usages --- | Parts: part def Aircraft { part def Autopilot { part def NavigationSensors { part def ControlSurfaces { part fuelTank { part aircraft : Aircraft { part autopilot : Autopilot { part navigationSensors : NavigationSensors { part controlSurfaces : ControlSurfaces {"
}